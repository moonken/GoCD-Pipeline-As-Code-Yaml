environments:
  example:
    environment_variables:
      EXAMPLE_DEPLOYMENT: testing
    pipelines:
      - yaml-example
      - upstream-example
pipelines:
  upstream-example:
    group: simple
    materials:
      mygit:  # this is the name of material
        # says about type of material and url at once
        git: https://github.com/kelseyhightower/nocode.git
    stages:
      - build: # name of stage
          jobs:
            build: # name of the job
              artifacts:
               - build:
                   source: result.txt
                   destination: test-bin
              tasks:
               - exec:
                    command: bash
                    arguments:
                      - "-c"
                      - "touch result.txt && echo test > result.txt"
  "yaml-example": # definition of yaml-example pipeline
    group: yaml-example
    # label_template: "${mygit[:8]}"
    locking: off
    materials:
      mygit: # this is the name of material
        # keyword git says about type of material and url at once
        git: https://github.com/kelseyhightower/nocode.git
      upstream:
        # type is optional here, material type is implied based on presence of pipeline and stage fields
        # type: dependency
        pipeline: upstream-example
        stage: build
    stages:
      - test: # name of stage
          clean_workspace: true
          jobs:
            test: # name of the job
              artifacts:
               - test:
                   source: tests/index.html
                   destination: test
              tabs:
                report: test/index.html
              tasks: # ordered list of tasks to execute in job csharp
               - exec: # indicates type of task
                   command: bash
                   arguments:
                    - "-c"
                    - "mkdir tests && touch tests/index.html && echo hello > tests/index.html && ls -alt" # list of stages in order
      - build: # name of stage
          clean_workspace: true
          jobs:
            build: # name of the job
              artifacts:
               - build:
                   source: bin
                   destination: build
              tasks: # ordered list of tasks to execute in job csharp
               - fetch:
                   pipeline: upstream-example
                   stage: build
                   job: build
                   source: test-bin/
                   destination: bin/
               - exec: # indicates type of task
                   command: bash
                   arguments:
                    - "-c"
                    - "mkdir tests && touch tests/index.html && echo hello > tests/index.html && ls -alt"